// LoginForm.tsx
import React, { useState } from 'react';

const LoginForm: React.FC = () => {
  const [email, setEmail] = useState('');
  const [password, setPassword] = useState('');
  const [error, setError] = useState('');

  const handleSubmit = (event: React.FormEvent) => {
    event.preventDefault();
    setError('');

    // Basic form validation
    if (!email || !password) {
      setError('Email and password are required.');
      return;
    }

    // Simulating API call with a mock fetch
    mockFetch(email, password)
      .then((response) => {
        if (response.success) {
          alert('Login successful!');
        } else {
          setError('Invalid credentials. Please try again.');
        }
      })
      .catch((error) => {
        setError('Something went wrong, please try again later.');
      });
  };

  const mockFetch = async (email: string, password: string) => {
    return new Promise<{ success: boolean }>((resolve) => {
      setTimeout(() => {
        if (email === 'user@example.com' && password === 'password123') {
          resolve({ success: true });
        } else {
          resolve({ success: false });
        }
      }, 1000);
    });
  };

  return (
    <div className="login-form">
      <h2>Login</h2>
      {error && <p className="error">{error}</p>}
      <form onSubmit={handleSubmit}>
        <div>
          <label htmlFor="email">Email:</label>
          <input
            type="email"
            id="email"
            value={email}
            onChange={(e) => setEmail(e.target.value)}
          />
        </div>
        <div>
          <label htmlFor="password">Password:</label>
          <input
            type="password"
            id="password"
            value={password}
            onChange={(e) => setPassword(e.target.value)}
          />
        </div>
        <button type="submit">Login</button>
      </form>
    </div>
  );
};

export default LoginForm;
